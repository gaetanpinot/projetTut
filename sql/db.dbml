// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs


Table utilisateur {
  id uuid [pk]
  nom_utilisateur varchar [unique]
  role int
  mot_de_passe varchar
  // utilisateur, producteur, admin

}

Table ingredient_produit{
  id_producteur uuid [pk, ref: > utilisateur.id]
  id_ingredient int [pk, ref: > ingredient.id]
}

Table producteur_utilisateur{
  id_producteur uuid [pk, ref: > utilisateur.id]
  id_utilisateur uuid [pk, ref: > utilisateur.id]
}

Table panier{
  id serial [pk]
  id_producteur uuid [ref: > utilisateur.id]
  date date

}

Table ingredient_panier{
  id_panier int [pk, ref: >panier.id]
  id_ingredient int [pk, ref: > ingredient.id]
  quantite varchar
}


Table panier_utilisateur{
  id_utilisateur uuid [pk, ref: > utilisateur.id]
  id_panier int [pk, ref: > panier.id]
}

Table recette{
  id serial [pk]
  nom varchar
  temps_preparation int
  //temps en min
  complexite int
  id_createur uuid [ref: > utilisateur.id]
  description text
  debut_saison int
  fin_saison int
  id_recette_parente int [ref: > recette.id]
  //recette parente si c'est une variante
  url_photo varchar

}
Table tag_recette{
  id_tag int [pk, ref:>tag.id]
  id_recette int [pk, ref:> recette.id]
}
Table tag{
  id serial [pk]
  label varchar [unique]
}


Table commentaire{
  id serial [pk]
  id_utilisateur uuid [ref: > utilisateur.id]
  id_recette int [ref: > recette.id]
  contenu text
}

Table favoris{
  id_utilisateur uuid [pk,ref:>utilisateur.id]
  id_recette int [pk,ref:>recette.id]
}

Table ustensile{
  id serial [pk]
  nom varchar [unique]
}


Table ingredient{
  id serial [pk]
  nom varchar [unique]
  debut_saison int
  fin_saison int
  url_photo varchar
}
Table note_recette{
  id_utilisateur uuid [pk,ref:>utilisateur.id]
  id_recette int [pk,ref:>recette.id]
  note int
}

Table allergene{
  id serial [pk]
  label varchar [unique]

}

Table frigo{
  id_utilisateur uuid [pk, ref: > utilisateur.id]
  id_ingredient int [pk, ref: > ingredient.id]
  date_ajout date [pk]
  //les ingredients ajouté à differents moments sont
  //différencié pour les faires apparaitres différements.
  quantite varchar

}
// enum unite{
//   l
//   cl
//   ml
//   g
//   Kg
//   U
//   //U pour unité, quand dénombre l'objet qu'on compte (5 oeufs)
// }

Table ingredient_recette{
  id_recette int [pk, ref: > recette.id]
  id_ingredient int [pk, ref: > ingredient.id]
  quantite varchar
}

Table allergene_ingredient {
  id_ingredient int [pk, ref: > ingredient.id]
  id_allergene int [pk, ref: > allergene.id]
}

Table ustensile_recette {
  id_recette int [pk, ref: > recette.id]
  id_ustensile int [pk, ref: > ustensile.id]

}

Table allergie_utilisateur {
  id_allergene int [pk, ref: > allergene.id]
  id_utilisateur uuid [pk, ref: > utilisateur.id]

}
//Table au lieu de ref sinon le nom par défaut est pas évident
Table ingredient_exclu{
  id_ingredient int [pk, ref: > ingredient.id ]
  id_utilisateur uuid [pk, ref: > utilisateur.id]
}

Table ustensile_exclu{
  id_ustensile int [pk, ref: > ustensile.id]
  id_utilisateur uuid [pk, ref: > utilisateur.id]
}
